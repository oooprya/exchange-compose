networks:
  dev:

services:
  nginx:
    build: ./nginx
    image: v1.01
    volumes:
      - static_volume:/static
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt  # Пробрасываем SSL-сертификаты внутрь контейнера
      - ./nginx/robots.txt:/etc/nginx/robots.txt  # Пробрасываем robots.txt внутрь контейнера
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: api
    image: api_v1.001
    volumes:
      - static_volume:/app/static
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    depends_on:
      - db
    networks:
      - dev
  db:
    image: postgres:16
    restart: always
    volumes:
      - pgdata16:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: django_db
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: django_password
    ports:
      - 5432:5432
    networks:
      - dev


  frontend:
    build: ./frontend
    container_name: next_v1
    image: next_v1.0005
    ports:
      - 4000:3000
    environment:
      - TZ=Europe/Kiev
      - NEXT_API_KEY=oooprya:befd2bc28866e973e7ce
      - NEXT_API_URL=https://exprivat.com.ua/api/v1
    depends_on:
      - nginx
    networks:
      - dev

  telegram_bot:
    image: bot_v1.0003
    build: ./bot
    container_name: telegram_bot
    volumes:
      - ./bot:/app
    depends_on:
      - backend
      - db
    env_file:
      - ./.env.prod

  # admin:
  #   image: adminer
  #   restart: always
  #   depends_on:
  #     - db
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - dev

  # redis:
  #     image: redis:7.0.5-alpine
  #     hostname: redis
  #     restart: always
  #     ports:
  #       - "6379:6379"
  #     depends_on:
  #       - backend
  #     networks:
  #       - dev


volumes:
  static_volume:
  pgdata16: